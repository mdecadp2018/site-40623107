var tipuesearch = {"pages":[{"title":"About","text":"2018 Fall 分組網誌 課程倉儲: https://github.com/mdecourse/2018fall 課程投影片: https://mdecourse.github.io/2018fall/reveal 課程網誌: https://mdecourse.github.io/2018fall/blog","tags":"misc","url":"https://mdecadp2018.github.io/site-40623107/blog/pages/about/"},{"title":"week7","text":"動態網頁出現問題時處理方法 使用 CMSimfly 過程, 碰到無法正確解讀 config/content.htm 時, 可更新程式碼或回報問題的流程 更新程式碼: 1.從 https://localhost8443 啟動動態網頁 2.動態資料放在config/content.htm 3.動態網頁出問題時可能是系統無法處理,要解決版本的問題 4.舊的程式沒辦法用圖片當作標題,程式升級後就不會產生錯誤 5.升級flaskapp.py試著用同樣程式處理 6.升級時記得content.htm要停留在某一個版本 回報問題:如果還是無法處理問題,從課程issues回報問題","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623107/blog/2018-Fall-7.html"},{"title":"week6","text":"學習onshape onshap lesson教材第三篇 1.Using Boolean operations 2.Applying linear and circular patterning 3.Applying mirror tool 4.Assemblies in Onshape 5.An introduction to concurrent top-down and bottom-up designs 6.Creating a Multi-Part design in a Part Studio","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623107/blog/2018-Fall-6.html"},{"title":"week5","text":"學習onshape 1.再命令提示列打 git version 可以查看p37的版本 onshap lesson教材第二篇 1.簡介\"設計意圖\" (design intent) 2.設定尺寸 (dimensions) 與約束 (constraints) 3.自動推理 (automatic inferencing) 4.繪製精確的零件 (accurate part) 5.草圖繪製練習 6.運用與建立平面 (planes) 7.建立圓角 (fillets) 與倒角 (chamfers) 8.使用多個 (multiple) 草圖區域 (sketch regions) 9.繪製時鐘模型 - 用於設計意圖教學 10.各種簡單的幾何形狀 (geometric shapes)","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623107/blog/2018-Fall-5.html"},{"title":"week4","text":"學習onshape基本用法 學習onshape的基本用法 1.說明基於草圖 ( sketch-based )的建模 2.介紹 4 個基本特徵 ( feature s)（擠出 ( extrude )，旋轉 ( revolve )，掃描 ( sweep )，和斷面混成 ( loaf )） 3.從 2D 過渡到 3D 4.圓柱薄殼 ( cylinder shell ) - 繪圖界面與可視化 / 檢視的介紹 5.針對既有草圖的模型 - 接續建立特徵 6.現存公用模型 (public models) - 如何搜尋並復製到工作區 ( workspace ) onshap基本練習影片","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623107/blog/2018-Fall-4.html"},{"title":"week3","text":"了解onshape 1.為甚麼要學習onshape? A:因為Onshape 是一個不需要下載軟體就可以隨時隨地利用網路的連結來進行繪圖，團隊可以在不同地方對單一設計進行修改，不需要特定的電腦或軟體就可以使用，透過雲端儲存，真的是非常的方便。 2.為甚麼選擇onshape? A:Onshape 有7種方式（密碼保護訪問、雙因素認證、數據庫備份程序、專用服務器、通信安全、加密、第三方測試）來保證設計的保密，即使黑客將 Onshape 服務器上的數據成功地破壞掉，也無法使用它，因為數據經過加密和格式化，所以是十分的安全，可以放心地使用它。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623107/blog/2018-Fall-3.html"},{"title":"week2","text":"1.下載 zoomit v4.5 Zoomit 可以利用 Ctrl + 1 以 Zoomit 的功能放大螢幕，選擇畫面,，以畫筆標示重點，也可以結合 ShareX 的 Ctrl + PrintScreen 擷取圖片 2.電腦輔助設計就是: Computer Aided (輔助), Guided (導引), Automated (自動), Autonomous (自主) Design","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623107/blog/2018-Fall-2.html"},{"title":"week1","text":"管理個人網站 1.登入github點選連結網址，領取個人其中作業。 2.把倉儲git clone到近端。 3.進入倉儲cd site-40623107切換分支git branch確認分支。 4.在近端啟動倉儲python wsgi.py，這樣的內容管理稱為動態，可以登入來修改維護。 5.點選generat_pages轉成靜態。 6.在使用git add .、git commit ...提交推送。 7.查看遠端https://mcdcadp2018.github.io/site-40623107","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623107/blog/2018-Fall-1.html"},{"title":"2018 Fall 分組網誌","text":"2018 Fall 開始將網際內容管理、投影片與網誌進行整合. 課程倉儲 利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處: 第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 cp github 倉儲 外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料. 第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 cp 課程網站 伺服. 第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料. 該學習哪種程式語言? C/C++、Python、Lua 或 Javascript? 都可以. 在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623107/blog/2018-Fall-Project-Blog.html"}]};